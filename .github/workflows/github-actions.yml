name: github-actions
on: [push]
jobs:
  AsyncAction:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set ubuntu
        run: |
          sudo apt-get update
          sudo apt-get -y install \
            curl \
            openssl \
            zip
          printf "\e[0;36m%s\e[0;0m\n" $(pwd)
          printf "\e[0;36m%s\e[0;0m\n" $(whoami)

      - name: Download lux
        run: |
          sudo mkdir -p /home/src
          curl -L https://github.com/iawia002/lux/releases/download/v0.13.0/lux_0.13.0_Linux_64-bit.tar.gz -o /home/src/lux_0.13.0_Linux_64-bit.tar.gz

      - name: Install lux
        run: |
          sudo tar -zxvf /home/src/lux_0.13.0_Linux_64-bit.tar.gz -C /usr/bin/
          sudo chmod +x /usr/bin/lux
          lux --version

      - name: Start jobs
        run: |
          lux -F ./douyin/v1.0.2.txt
          sudo zip -r resource.zip ./*
          printf "\e[0;32m%s\e[0;0m\n" "Source build success"
          openssl enc -aes-256-cbc -in resource.zip -out resource.e.zip -k secret20 -iv fbbe987afcc0b3787cefc0acb0969786 -a -nosalt -pbkdf2
          printf "\e[0;32m%s\e[0;0m\n" "Encryption success"
          printf "\e[0;32m%s\e[0;0m\n" $(pwd)
          ls -al

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.2
          release_name: Release v1.0.2
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./resource.e.zip
          asset_name: resource.e.zip
          asset_content_type: application/zip
